from aiogram.types import CallbackQuery
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram import types
from aiogram.enums import ParseMode
from kb import AGE_KB, SHIFT_KB, START_KB, BACK_KB, ADMIN_KB, BOOL_KB, STAFF_KB, BACK_SETTINGS_KB, SKOTS_BASK


async def render_start(target: Message | CallbackQuery):
    text = """–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ¬´–î–µ—Ç—Å–∞–¥—ë–Ω–æ–∫¬ª!  
–Ø –ø–æ–º–æ–≥—É –≤–∞–º –∑–∞–ø–∏—Å–∞—Ç—å –≤–∞—à–µ–≥–æ –º–∞–ª—ã—à–∞ –≤ –Ω–∞—à –¥–µ—Ç—Å–∫–∏–π —Ü–µ–Ω—Ç—Ä: —Ä–∞—Å—Å–∫–∞–∂—É –æ –ø—Ä–æ–≥—Ä–∞–º–º–∞—Ö –∏ –æ —Å–∞–¥–∏–∫–µ."""
    
    if isinstance(target, CallbackQuery):
        await target.message.edit_text(text=text, reply_markup=START_KB)
    else:
        await target.answer(text=text, reply_markup=START_KB)


async def render_settings(message: Message):
    text = "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω–∞. –¢—É—Ç –º–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –≥—Ä—É–ø–ø –∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤."
    await message.answer(text=text, reply_markup=ADMIN_KB)


async def render_about(callback: CallbackQuery):
    text = """–ú—ã ‚Äî –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –ø–µ–¥–∞–≥–æ–≥–æ–≤, –ø—Å–∏—Ö–æ–ª–æ–≥–æ–≤ –∏ –≤–æ—Å–ø–∏—Ç–∞—Ç–µ–ª–µ–π —Å –º–Ω–æ–≥–æ–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã –≤ –¥–µ—Ç—Å–∫–∏—Ö —É—á—Ä–µ–∂–¥–µ–Ω–∏—è—Ö. –ù–∞—à–∞ –º–∏—Å—Å–∏—è ‚Äî —Å–æ–∑–¥–∞—Ç—å –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –∑–∞–±–æ—Ç—ã –∏ —Ä–∞–∑–≤–∏—Ç–∏—è, –≥–¥–µ –∫–∞–∂–¥—ã–π —Ä–µ–±—ë–Ω–æ–∫ —Å–º–æ–∂–µ—Ç —Ä–∞—Å–∫—Ä—ã—Ç—å —Å–≤–æ–∏ —Ç–∞–ª–∞–Ω—Ç—ã –∏ –æ–±—Ä–µ—Å—Ç–∏ –Ω–æ–≤—ã—Ö –¥—Ä—É–∑–µ–π.
üìç –ù–∞—à —Ü–µ–Ω—Ç—Ä –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —É–¥–æ–±–Ω–æ–º —Ä–∞–π–æ–Ω–µ —Å –±–µ–∑–æ–ø–∞—Å–Ω–æ–π —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–µ–π –∏ –∑–µ–ª—ë–Ω—ã–º –¥–≤–æ—Ä–∏–∫–æ–º.
üïí –ì–∏–±–∫–∏–π –≥—Ä–∞—Ñ–∏–∫: —É—Ç—Ä–µ–Ω–Ω–∏–µ –∏ –≤–µ—á–µ—Ä–Ω–∏–µ –≥—Ä—É–ø–ø—ã, –ø–æ–ª—É–¥–Ω–µ–≤–Ω–æ–π –∏ –ø–æ–ª–Ω—ã–π –¥–µ–Ω—å.
üë• –ú–∏–Ω–∏-–≥—Ä—É–ø–ø—ã –¥–æ 10 –¥–µ—Ç–µ–π ‚Äî –º–∞–∫—Å–∏–º—É–º –≤–Ω–∏–º–∞–Ω–∏—è –∫–∞–∂–¥–æ–º—É –º–∞–ª—ã—à—É.
ü•™ –ü–∏—Ç–∞–Ω–∏–µ –∏ –æ–∑–¥–æ—Ä–æ–≤–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –≤–∫–ª—é—á–µ–Ω—ã –≤ —Å—Ç–æ–∏–º–æ—Å—Ç—å.
"""
    await callback.message.edit_text(text=text, reply_markup=BACK_KB)


async def render_schedule(callback: CallbackQuery):
    text = """–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∏ –æ–ø–ª–∞—Ç–∞
    –£—Ç—Ä–æ 09:00-13:30 - 350$
    –í–µ—á–µ—Ä 13:30-18:00 - 350$
    –ü–æ–ª–Ω—ã–π –¥–µ–Ω—å 09:00-18:00 - 600$"""
    await callback.message.edit_text(text=text, reply_markup=BACK_KB)


async def render_additional(callback: CallbackQuery):
    text = """–ù–∏–∂–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –Ω–∞—à–∏ –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–µ –∏ —Å–µ–∑–æ–Ω–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –¥–ª—è –¥–µ—Ç–µ–π –æ—Ç 2 –¥–æ 7 –ª–µ—Ç:

1.–¢–≤–æ—Ä—á–µ—Å–∫–∞—è –º–∞—Å—Ç–µ—Ä—Å–∫–∞—è
‚Äì –†–∏—Å–æ–≤–∞–Ω–∏–µ, –ª–µ–ø–∫–∞, –∞–ø–ø–ª–∏–∫–∞—Ü–∏—è
‚Äì –†–∞–∑–≤–∏—Ç–∏–µ –º–µ–ª–∫–æ–π –º–æ—Ç–æ—Ä–∏–∫–∏ –∏ –≤–æ–æ–±—Ä–∞–∂–µ–Ω–∏—è
2.–ú—É–∑—ã–∫–∞–ª—å–Ω—ã–π –∫—Ä—É–∂–æ–∫
‚Äì –ó–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å –Ω–æ—Ç–∞–º–∏ –∏ —Ä–∏—Ç–º–æ–º
‚Äì –ü–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø–µ –∏ –∏–≥—Ä–∞ –Ω–∞ –¥–µ—Ç—Å–∫–∏—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞—Ö
3.–ê–Ω–≥–ª–∏–π—Å–∫–∏–π –¥–ª—è –º–∞–ª—ã—à–µ–π
‚Äì –í–µ—Å—ë–ª—ã–µ –ø–µ—Å–Ω–∏ –∏ –∏–≥—Ä—ã –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º
‚Äì –ë–∞–∑–æ–≤—ã–π –≤–æ–∫–∞–±—É–ª—è—Ä –∏ –ø—Ä–æ—Å—Ç—ã–µ —Ñ—Ä–∞–∑—ã
4.–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è —Å—Ç—É–¥–∏—è
‚Äì –ì–∏–º–Ω–∞—Å—Ç–∏–∫–∞, –π–æ–≥–∞ –¥–ª—è –¥–µ—Ç–µ–π
‚Äì –ü–æ–¥–≤–∏–∂–Ω—ã–µ –∏–≥—Ä—ã –∏ —ç—Å—Ç–∞—Ñ–µ—Ç—ã
5.–£–º–µ–ª—ã–µ —Ä—É—á–∫–∏
‚Äì –ü–æ–¥–µ–ª–∫–∏ –∏–∑ –ø—Ä–∏—Ä–æ–¥–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
‚Äì –†–∞–∑–≤–∏—Ç–∏–µ –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ–≥–æ –º—ã—à–ª–µ–Ω–∏—è
6.–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è —é–Ω–æ–≥–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—è
‚Äì –ü—Ä–æ—Å—Ç—ã–µ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã –ø–æ —Ö–∏–º–∏–∏ –∏ —Ñ–∏–∑–∏–∫–µ
‚Äì –ü–æ–∑–Ω–∞–≤–∞—Ç–µ–ª—å–Ω—ã–µ —à–æ—É-–æ–ø—ã—Ç—ã
"""
    await callback.message.edit_text(text=text, reply_markup=BACK_KB)
    

async def render_age(callback: CallbackQuery):
    text = "–°–∫–æ–ª—å–∫–æ –ª–µ—Ç —Ä–µ–±—ë–Ω–∫—É?"
    await callback.message.edit_text(text=text, reply_markup=AGE_KB)


async def render_shift(callback: CallbackQuery):
    text = "–í—ã–±–µ—Ä–∏—Ç–µ —Å–º–µ–Ω—É:"
    await callback.message.edit_text(text=text, reply_markup=SHIFT_KB)


async def render_notes(callback: CallbackQuery):
    text = "–ï—Å—Ç—å –ª–∏ —É —Ä–µ–±–µ–Ω–∫–∞ –∞–ª–ª–µ—Ä–≥–∏—è –∏–ª–∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏? –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ —á—Ç–æ –º—ã –¥–æ–ª–∂–Ω—ã –∑–Ω–∞—Ç—å."
    await callback.message.edit_text(text=text)


async def post_admin(message: Message, data, bot, ADMIN_CHAT_ID):
    text = (
        f"–ù–æ–≤–æ–∞—è –∑–∞—è–≤–∫–∞:"
        f"–†–µ–±–µ–Ω–∫—É {data['age']},\n"
        f"–°–º–µ–Ω–∞ {data['shift']},\n"
        f"–ê–ª–ª–µ—Ä–≥–∏—è –∏–ª–∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏: {data['notes']}.\n"
        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.first_name} {message.from_user.last_name},\n"
        f"–¢–µ–ª–µ–≥—Ä–∞–º –¥–ª—è —Å–≤—è–∑–∏ @{message.from_user.username},\n"
    )
    await bot.send_message(ADMIN_CHAT_ID, text)


async def render_settings_age(callback: CallbackQuery, slots_list):
    lines = ["–í–æ–∑—Ä–∞—Å—Ç  | –°–º–µ–Ω–∞          | –°—Ç–∞—Ç—É—Å"]
    lines.append("‚îÄ" * len(lines[0]))

    for age_group, shift, available in slots_list:
        status = "‚úÖ" if available else "‚ùå"
        lines.append(
            f"{age_group.ljust(8)} | {shift.ljust(14)} | {status}"
        )

    table = "\n".join(lines)
    text = ("<pre>" + table + "</pre>")
    text += "\n\n–í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç–Ω—É—é –≥—Ä—É–ø–ø—É:"
    await callback.message.edit_text( text=text, parse_mode=ParseMode.HTML, reply_markup=AGE_KB)


async def render_settings_slots(callback: CallbackQuery):
    text = "–ï—Å—Ç—å –ª–∏ –º–µ—Å—Ç–∞?"
    await callback.message.edit_text(text=text, reply_markup=BOOL_KB)


async def render_success(callback: CallbackQuery):
    text = "–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤–Ω–µ—Å–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!"
    await callback.message.edit_text(text=text, reply_markup=BACK_SETTINGS_KB)


async def render_show_get_slots(callback: CallbackQuery):
    text = "–°–≤–æ–±–æ–¥–Ω—ã–µ –º–µ—Å—Ç–∞ –µ—Å—Ç—å. –û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–≤—è–∂–∏—Ç—Å—è —Å–≤–∞–º–∏!"
    await callback.message.edit_text(text=text, reply_markup=SKOTS_BASK)


async def render_not_slots(target: Message | CallbackQuery):
    text = "–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö–º–µ—Å—Ç –Ω–µ—Ç!"
    if isinstance(target, CallbackQuery):
        await target.message.edit_text(text=text, reply_markup=BACK_KB)
    else:
        await target.answer(text=text, reply_markup=BACK_KB)
    

async def render_staff_list(callback: CallbackQuery, staff_list):
    text = "–°–ø–∏—Å–æ–∫ –∞–¥–º–∏—Ä–∞—Ç–æ—Ä–æ–≤:\n\n"
    for row in staff_list:
        user_id, first_name, last_name, username = row
        text += f"‚Ä¢ {first_name} {last_name or ''} (@{username})\n"
    await callback.message.edit_text(text=text, reply_markup=STAFF_KB)


async def render_get_staff(callback: CallbackQuery):
    text = "–ü—Ä–∏—à–ª–∏—Ç–µ @username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    await callback.message.edit_text(text=text)


async def render_get_user_id_success(message: Message, username:str):
    text = f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã"
    await message.answer(text=text)


async def render_add_staff_success(message: Message, username:str):
    text = f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä @{username} —É–¥–∞–ª–µ–Ω."
    await message.answer(text=text)


async def render_add_staff_fall(message: Message, username:str):
    text = f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –Ω–µ —Ä–∞–∑–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!"
    await message.answer(text=text)

async def render_visit_form_success(message: Message):
    text = "–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞—è–≤–∫—É! –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–≤—è–∂–∏—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∑–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!"
    await message.answer(text=text, reply_markup=BACK_KB)

